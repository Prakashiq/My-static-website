image: node

stages:
  - prep
  - build
  - test  
  - review
  - deploy stage
  - stage tests
  - deploy production 
  - production tests 
  - cache
  

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
  policy: pull
  
update cache:
  stage: cache
  script:
    - npm install
  cache:
      key: ${CI_COMMIT_REF_SLUG}
      paths:
        - node_modules/
      policy: push
  only:
    - schedules

variables:
  PROD_DOMAIN: prakashiq.surge.sh
  STG_DOMAIN: prakashiq_stg.surge.sh

.only-default: &only-default
  only:
    - master
    - merge_requests
    - tags

.perp work:
  stage: prep
  script: export

build website:
  <<: *only-default
  stage: build
  script:
    - echo ${CI_COMMIT_SHORT_SHA}
    - npm install
    - npm install -g gatsby-cli
    - gatsby build
    - sed -i "s/%%VERSION_NUMBER%%/$CI_COMMIT_SHORT_SHA/" ./public/index.html
  artifacts:
    paths:
      - ./public
  except:
    - schedules

test artifact:
  <<: *only-default
  image: alpine
  stage: test
  cache: {}
  script:
    - grep "Gatsby" -q ./public/index.html

test website:
  <<: *only-default
  stage: test
  script: 
    - npm install
    - npm install -g gatsby-cli
    - gatsby serve &
    - sleep 3
    - curl "http://localhost:9000" | tac | tac | grep -q "Gatsby"

review changes:
  stage: review
  only:
    - merge_requests
  environment: 
    name: review/$CI_COMMIT_REF_NAME
    url: https://prakashiq_$CI_ENVIRONMENT_SLUG.surge.sh
    on_stop: stop review
  script:
    - npm install -g surge
    - surge --project ./public --domain https://prakashiq_$CI_ENVIRONMENT_SLUG.surge.sh 
    
stop review:
  stage: review
  only:
    - merge_requests
  variables: 
    GIT_STRATEGY: none
  script:
    - echo "Remove reivew App $CI_COMMIT_REF_NAME"
    - npm install -g surge
    - surge teardown https://prakashiq_$CI_ENVIRONMENT_SLUG.surge.sh
  when: manual
  environment: 
    name: review/$CI_COMMIT_REF_NAME
    action: stop

depoly my website in stage:
  stage: deploy stage
  environment: 
    name: stage
    url: https://$STG_DOMAIN
  only:
    - master
  script:
    - npm install -g surge
    - surge --project ./public --domain $STG_DOMAIN  

depoly my website:
  stage: deploy production
  environment: 
    name: prod
    url: https://$PROD_DOMAIN
  when: manual
  allow_failure: false
  only:
    - master
  script:
    - npm install -g surge
    - surge --project ./public --domain $PROD_DOMAIN  

test my stage deployment:
  image: alpine
  stage: stage tests 
  environment: 
    name: stage
    url: https://$STG_DOMAIN
  only:
    - master
  script: 
     - apk add --no-cache curl
     - curl -s "https://$STG_DOMAIN" | grep -q "Hi people"
     - curl -s "https://$STG_DOMAIN" | grep -q $CI_COMMIT_SHORT_SHA

test my production deployment:
  image: alpine
  stage: production tests 
  environment: 
    name: stage
    url: https://$STG_DOMAIN
  only:
    - master
  script: 
     - apk add --no-cache curl
     - curl -s "https://$PROD_DOMAIN" | grep -q "Hi people"
     - curl -s "https://$PROD_DOMAIN" | grep -q $CI_COMMIT_SHORT_SHA